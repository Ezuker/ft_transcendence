# Generated by Django 5.1.1 on 2024-09-18 17:26

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AIPlayer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('elo', models.PositiveIntegerField(default=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('type', models.CharField(max_length=10)),
                ('finish', models.BooleanField(default=False)),
                ('time', models.IntegerField(default=0)),
                ('elo_before_player1', models.IntegerField()),
                ('elo_before_player2', models.IntegerField()),
                ('elo_after_player1', models.IntegerField(null=True)),
                ('elo_after_player2', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('mail', models.CharField(max_length=255, unique=True)),
                ('img', models.ImageField(default='profile_pics/default.png', upload_to='profile_pics/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('eloPong', models.PositiveIntegerField(default=1000)),
                ('eloConnect4', models.PositiveIntegerField(default=1000)),
                ('is_online', models.BooleanField(default=False)),
                ('lastConnexion', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.IntegerField()),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notif_recipient', to='api.player')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notif_sender', to='api.player')),
            ],
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to='api.player')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='api.player')),
            ],
        ),
        migrations.CreateModel(
            name='Lobby',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('locked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(default='Lobby', max_length=255)),
                ('ai_players', models.ManyToManyField(blank=True, related_name='lobbies', to='api.aiplayer')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner', to='api.player')),
                ('players', models.ManyToManyField(related_name='lobbies', to='api.player')),
            ],
        ),
        migrations.CreateModel(
            name='GameInvitation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game', to='api.game')),
                ('player1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player1_invitations', to='api.player')),
                ('player2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player2_invitations', to='api.player')),
            ],
        ),
        migrations.CreateModel(
            name='Game_Tournament',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('layer', models.IntegerField(default=0)),
                ('ai_players', models.ManyToManyField(related_name='games', to='api.aiplayer')),
                ('next_game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='previous_game', to='api.game_tournament')),
                ('winner_ai', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='won_games', to='api.aiplayer')),
                ('players', models.ManyToManyField(related_name='games', to='api.player')),
                ('winner_player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='won_games', to='api.player')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='player1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player1', to='api.player'),
        ),
        migrations.AddField(
            model_name='game',
            name='player2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player2', to='api.player'),
        ),
        migrations.AddField(
            model_name='game',
            name='winner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winner', to='api.player'),
        ),
        migrations.CreateModel(
            name='Friends',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(default=0)),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend', to='api.player')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player', to='api.player')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('UUID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('UUID_LOBBY', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lobby', to='api.lobby')),
                ('games', models.ManyToManyField(related_name='tournament', to='api.game_tournament')),
            ],
        ),
        migrations.AddField(
            model_name='game_tournament',
            name='UUID_TOURNAMENT',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament', to='api.tournament'),
        ),
    ]
